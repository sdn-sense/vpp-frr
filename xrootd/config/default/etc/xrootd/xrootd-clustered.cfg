# ====================================================
# IMPORTANT NOTE
# ====================================================
# We run 2 separate processes, which is 1 for stageout, and another one
# is for xrootd access. We do this because we want to have separate processes
# handling access and stageout (we have seen big issues when only 1 is used
# and not scalable enough)
# ====================================================

# The export directive indicates which paths are to be exported. While the
# default is '/tmp', we indicate it anyway and add the 'stages attribute
# to allow you to start the frm_xfrd to bring in missing files into '/tmp'.
# Remove this attribute if you don't want to enable this feature.
#
all.export /tmp stage

# The copycmd directive tells the frm_xfrd what to use to copy files into
# an exported path with the 'stage' attribute. Here we just say this will
# be '/bin/cp' to allow the frm_xfrd to actual start to show that it works.
# Here missing files are created in /tmp as zero-length files.
#
frm.xfr.copycmd /bin/cp /dev/null $PFN

# The adminpath and pidpath variables indicate where the pid and various
# IPC files should be placed
#
all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd

# ====================================================
# CUSTOM CONFIGS
# ====================================================
set xrdr = $XRD_REDIR
set xrdrport = $XRD_REDIR_PORT
set port = $XRD_PORT
set mngport = $XRD_MNG_PORT
set localroot = $LOCAL_ROOT
set sitename = $SITENAME
set xrdcert = $XRD_CERT
set xrdkey = $XRD_KEY

# Enable DFS (Means all servers have a shared file system)
if defined ?~DFS
  set dfs = $DFS
fi

# Enable HTTP Read/Write endpoints
if defined ?~XRD_HTTP_SECRET_KEY
  set secretkey = $XRD_HTTP_SECRET_KEY
fi

# Enable HTTP Read/Write endpoints
if defined ?~HTTPREADWRITE
  set httpreadwrite = $HTTPREADWRITE
fi

# Allow to set XRootD Monitor Shoveler Endpoint
if defined ?~SHOVELER
  set monitor = $SHOVELER
fi

if defined ?~SHOVELER_PORT
  set monport = $SHOVELER_PORT
fi

# Allow to control Redirector Type
if defined ?~TYPE_REDIRECTOR
  set typeredirector = $TYPE_REDIRECTOR
fi

# Allow to control Debug mode
if defined ?~FULL_DEBUG
  set fulldebug = $FULL_DEBUG
fi

# Allow to set global redirector
# e.g. for CMS Production: cmsxrootd.fnal.gov+ 1213
# 2024 Feb 9th - xrootd unhappy to use "cmsxrootd.fnal.gov+ 1213" and will
# scream that port not defined...
if defined ?~GLOBALREDIR
  set globalredirector = $GLOBALREDIR
fi
if defined ?~GLOBALREDIRPORT
  set globalredirectorport = $GLOBALREDIRPORT
fi

# Voms and Gridmapfile locations
# 2024-Feb-20: voms.mapfile does not support variable - so cant set that!

if defined ?~GRID_MAP_LOCATION
  set gridmaplocation = $GRID_MAP_LOCATION
else
  set gridmaplocation = "/etc/grid-security/grid-mapfile"
fi

# Cache related parameters
if defined ?~XRD_OSS_DATA
  set ossdata = $XRD_OSS_DATA
fi

if defined ?~XRD_OSS_META
  set ossmeta = $XRD_OSS_META
fi

if defined ?~XRD_RAM
  set ram = $XRD_RAM # 16g
fi

if defined ?~TYPE_XCACHE
  set typexcache = $TYPE_XCACHE
fi

if defined ?~XCACHE_ORIGIN
  set xcacheorigin = $XCACHE_ORIGIN
fi

# ====================================================
# XrootD Security
# ---------------------------------------
xrootd.seclib /usr/lib64/libXrdSec.so
voms.mapfile /etc/grid-security/voms-mapfile
sec.protocol /usr/lib64 gsi -certdir:/etc/grid-security/certificates -cert:$(xrdcert) -key:$(xrdkey) -crl:1 -gmapopt:trymap -gridmap:$(gridmaplocation) -vomsfun:default
acc.authdb /etc/xrootd/auth_file
ofs.authorize
macaroons.secretkey /etc/xrootd/macaroon-secret
ofs.authlib ++ libXrdMacaroons.so
ofs.authlib ++ libXrdAccSciTokens.so
# --------------------------------------
# XrootD Monitoring
# --------------------------------------
# Monitoring for AAA Dashboard :
if defined ?monitor && defined ?monport
  xrootd.monitor all \
    auth \
    flush 30s \
    window 5s fstat 60 lfn ops xfr 5 \
    dest fstat files info user $(monitor):$(monport)
fi

all.sitename $(sitename)
# -------------------------------------
# Configure redirector/server
# -------------------------------------
if exec cmsd
  xrd.port $(mngport)
else
  xrd.port $(port)
fi

all.manager $(xrdr):$(xrdrport)

if defined ?typeredirector
  # It's role is manager
  all.role manager
else
  # Role is server
  all.role server
  # The known managers (local redirector)
  all.manager meta $(xrdr):$(xrdrport)
fi

if defined ?dfs && defined ?typeredirector
  # Redirect all lookup calls to original data servers. Redirector does not have visibility of FS
  cms.dfs lookup distrib mdhold 0 redirect immed
fi


# XRootD does not support nested if, only if-else-fi. Due to this, we need to set
# Top level manager outside of redirector configuration
if defined ?globalredirector && defined ?typeredirector && defined ?globalredirectorport
  all.manager meta all $(globalredirector)+ $(globalredirectorport)
fi

if defined ?typexcache && exec xrootd
  # If cmsd loads it - it will not cache anything and will
  # not be able to find available disk space
  ofs.osslib   libXrdPss.so
  pss.cachelib libXrdPfc.so
  # globus and async can not be used together (globus screws up signal hanlders)
  # /usr/lib64/libXrdLcmaps-5.so pulls in tons of globus stuffe
  # https://github.com/xrootd/xrootd/issues/1616
  xrootd.async off
else if defined ?typexcache
  # We have to put something for xcache cmsd... so we use async (repeated in upper block)
  # globus and async can not be used together (globus screws up signal hanlders)
  # /usr/lib64/libXrdLcmaps-5.so pulls in tons of globus stuffe
  # https://github.com/xrootd/xrootd/issues/1616
  xrootd.async off
else
  # Enable xrootd checksum calculation "on-the-fly" using multiuser plugin
  # This makes XRootD to write the files with the
  # ownership of the user that authenticated to the server and not as the
  # 'xrootd' user
  ofs.osslib ++ libXrdMultiuser.so
  # Enable the checksum wrapper
  ofs.ckslib * libXrdMultiuser.so
  # Control of checksum
  xrootd.chksum max 100 adler32
  multiuser.checksumonwrite on
  multiuser.umask 0002
fi


# -------------------------------------
# Allow only specific path, checksum config
# -------------------------------------
# Allow any path to be exported; this is further refined in the authfile.
if defined ?typexcache
  all.export /store cache
else
  all.export /
fi

# Hosts allowed to use this xrootd cluster
cms.allow host *

# -------------------------------------
# Integrate with CMS Namespaces
# It will see files under /store/...
# -------------------------------------
oss.localroot $(localroot)

# -------------------------------------
# Xcache parameters
# -------------------------------------
if defined ?typexcache
  pss.origin $(xcacheorigin)
  oss.space meta $(ossmeta)
  oss.space data $(ossdata)
  pfc.spaces data meta
  pfc.ram $(ram)

  pfc.blocksize 512k
  pfc.diskusage 0.98 0.99

  xrd.allow host *
  xrd.network keepalive kaparms 10m,1m,5
  xrd.timeout idle 60m

  # Sync control
  # 4/25/2019 Edgar Fajardo/Matevz Tadel
  # extends time given to xcache to close a file
  pss.ciosync  60 900

  # enaable prefetching
  pfc.prefetch   10
  # use 4 writer thread, write 16 blocks in each loop iteration
  pfc.writequeue 16 4
  pfc.allow_xrdpfc_command
fi
# -------------------------------------
# Enable TLS and ZTN Protocol
# -------------------------------------
if exec xrootd
  xrootd.tls capable all
  sec.protocol ztn
  xrd.tlsca certdir /etc/grid-security/certificates
  xrd.tls $(xrdcert) $(xrdkey)
fi

# -------------------------------------
# Configure davs/https for TPC
# -------------------------------------
# Enable https over XrootD
if defined ?httpreadwrite && exec xrootd
  xrd.protocol http:$(port) /usr/lib64/libXrdHttp.so
  http.cadir /etc/grid-security/certificates
  http.cert $(xrdcert)
  http.key $(xrdkey)
  http.gridmap /etc/grid-security/grid-mapfile
  http.secxtractor /usr/lib64/libXrdHttpVOMS.so
  http.secretkey $(secretkey)
  # Enable third-party-copy
  http.exthandler xrdtpc libXrdHttpTPC.so
  # Pass the bearer token to the Xrootd authorization framework.
  http.header2cgi Authorization authz
  http.listingdeny yes
  http.desthttps yes
  http.selfhttps2http no
  http.staticpreload http://static/robots.txt /etc/xrootd/robots.txt
  http.exthandler xrdmacaroons libXrdMacaroons.so
fi

# -------------------------------------
# DEBUG
# -------------------------------------
# In case you need full debug
if defined ?fulldebug
  xrootd.trace all
  http.trace   all
  xrd.trace    all
  ofs.trace    all
  pfc.trace    all
  cms.trace    all
  # To debug connections to the fedration (5 Dump, 4 Debug, 3 Error, 2 Warning, 1 Info)
  pss.setopt   DebugLevel 4
fi
